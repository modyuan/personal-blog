{"version":3,"sources":["PopDialog.js","Nav.js","TextList.js","About.js","Text.js","PageSelector.js","App.js","serviceWorker.js","index.js"],"names":["PopDialog","props","state","username","password","e","preventDefault","this","setState","show","onSubmit","console","warn","onClose","target","name","value","className","onClick","style","position","right","top","width","height","cursor","t","viewBox","version","xmlns","p-id","d","fill","type","placeholder","onChange","React","Component","AppNav","userBar","userName","key","onRequireLogoff","onRequireLogin","href","display","justifyContent","NavPathItem","window","history","pushState","onpopstate","textDecorationLine","color","children","TextListItem","title","brief","author","date","toLocaleString","TextList","log","r","JSON","stringify","data","map","id","margin","About","Text","prevProps","prevState","snapshot","MathJax","typeset","converter","showdown","Converter","extensions","showdownHighlight","setFlavor","renderedContent","makeHtml","content","modifyButton","login","borderRadius","background","border","textAlign","alignItems","fontSize","createTime","Format","padding","dangerouslySetInnerHTML","__html","PageSelector","index","cur","parseInt","prev","i","maxPage","max","cc","push","li","App","checkMaxPageIndex","fetch","then","response","json","maxPageIndex","Math","ceil","checkLoginStatus","credentials","status","catch","error","showLoginDialog","method","res","onLogin","msg","headers","body","alert","onLoginClose","loadTextList","callback","r2","a","Date","tags","currentTextList","pageIndex","onClickPageSelector","switchPage","loadText","currentText","onClickTextListItem","location","pathname","match","slice","path","isChangeUrl","isUpdate","forceUpdate","route","length","onModify","onTextWantModify","setTimeout","currentShow","find","arr","ele","Boolean","hostname","prototype","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.54fa4a8e.chunk.js","sourcesContent":["import React from 'react';\nimport \"./PopDialog.css\"\n\nclass PopDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            show: false\n        });\n\n        if (this.props.onSubmit) {\n            this.props.onSubmit({username: this.state.username, password: this.state.password});\n        } else {\n            console.warn(\"onSubmit is not handled!\");\n        }\n    }\n\n    onClose(e) {\n        e.preventDefault();\n        if (this.props.onClose)\n            this.props.onClose();\n    }\n\n    onChange(e) {\n        //console.log( `${e.target.name} = ${e.target.value}`);\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n        return (\n\n            <div className=\"PopDialog-back\">\n                <div className=\"PopDialog\">\n                    <div onClick={(e) => {\n                        this.onClose(e)\n                    }} style={{\n                        position: \"absolute\",\n                        right: \"12px\",\n                        top: \"12px\",\n                        width: 20,\n                        height: 20,\n                        cursor: \"pointer\"\n                    }}>\n                        <svg t=\"1587447439035\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\n                             xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1141\" width=\"20\" height=\"20\">\n                            <path\n                                d=\"M810.666667 273.493333L750.506667 213.333333 512 451.84 273.493333 213.333333 213.333333 273.493333 451.84 512 213.333333 750.506667 273.493333 810.666667 512 572.16 750.506667 810.666667 810.666667 750.506667 572.16 512z\"\n                                p-id=\"1142\" fill=\"#000000\"/>\n                        </svg>\n                    </div>\n                    <form onSubmit={(e) => this.onSubmit(e)}>\n                        <label style={{\"display\": \"block\"}}> 请登录 </label>\n                        <input type=\"text\" name='username' placeholder=\"请输入用户名\" value={this.state.username || ''}\n                               onChange={(e) => this.onChange(e)}/>\n                        <input type=\"password\" name='password' placeholder=\"请输入密码\" value={this.state.password || ''}\n                               onChange={(e) => this.onChange(e)}/>\n                        <button>登录</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport {PopDialog};","import React from 'react';\nimport './Nav.css'\n\nclass AppNav extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n\n        let userBar = null;\n        if (this.props.userName) {\n            userBar = [<li key=\"username\">你好，{this.props.userName}</li>,\n                <li key=\"logoff\" onClick={this.props.onRequireLogoff}>注销</li>];\n        } else {\n            userBar = [<li key=\"pleaseLogin\" onClick={this.props.onRequireLogin}>请登录</li>];\n        }\n\n        return (\n            <div>\n                <div className=\"AppNav-wrap\">\n                    <div className=\"AppNav\">\n                        <ul>\n                            <NavPathItem href=\"/\">首页</NavPathItem>\n                            <NavPathItem href=\"/about\">关于</NavPathItem>\n                        </ul>\n                        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                            {userBar}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"AppNav-place\"/>\n            </div>\n\n        );\n    }\n}\n\n\nclass NavPathItem extends React.Component {\n\n    onClick = (e) => {\n        e.preventDefault();\n        window.history.pushState(null, '', this.props.href);\n        if(window.onpopstate)\n            window.onpopstate();\n    }\n\n    render() {\n        return (\n            <li>\n                <a style={{textDecorationLine: \"none\",color:\"inherit\"}} href={this.props.href}\n                   onClick={this.onClick}>{this.props.children}</a>\n            </li>\n        );\n    }\n}\n\nexport default AppNav;","import React from 'react';\nimport './TextList.css'\nimport './Common.css'\n\nfunction TextList(props) {\n    console.log(\"render TextList!\");\n    let r = null;\n    console.log(\"TextList data: \"+ JSON.stringify(props.data));\n    if (props.data) {\n        r = props.data.map(e => {\n            return (\n                <TextListItem title={e.title} brief={e.brief} author={e.author}\n                              date={e.date} id={e.id} key={e.id}\n                              onClick={() => props.onClick(e.id)}/>\n            );\n        });\n    }\n    return (\n        <div style={{width: 1000, margin: \"0 auto\"}}>\n            {r}\n        </div>\n    );\n}\n\nfunction TextListItem(props) {\n    return (\n        <div className=\"TextListItem Card\" onClick={props.onClick}>\n            <h1 style={{cursor: \"pointer\"}}>\n                {props.title}\n            </h1>\n            <div name=\"brief\">\n                {props.brief}\n            </div>\n            <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                <div>\n                    {props.author} 发布于 {props.date.toLocaleString()}\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default TextList;","import React from \"react\";\n\nclass About extends React.Component{\n    render() {\n        return <div> 关于页面 </div>\n    }\n}\n\nexport default About;","import React from 'react';\nimport './Text.css'\nimport './Common.css'\nimport './markdown.css'\nimport showdown from 'showdown';\nimport showdownHighlight from 'showdown-highlight';\n\nclass Text extends React.Component {\n    constructor(props) {\n        super(props);\n        \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        window.MathJax.typeset(); // 渲染Latex数学公式\n        // 使用自己的扫描代替MathJax的全局扫描，这样可以一遍渲染出最后结果，而不用先渲染markdown，再渲染公式\n    }\n\n    render() {\n        if(!this.props.data){\n            return <div style={{width: 1000, margin: \"0 auto\"}}></div>\n        }\n        let converter = new showdown.Converter({extensions: [showdownHighlight]});\n        converter.setFlavor('github');\n        let renderedContent = converter.makeHtml(this.props.data.content);\n\n        let modifyButton = null;\n        if (this.props.data.login)\n            modifyButton = (\n                <button style={{margin: 10, borderRadius: 3, background: \"skyblue\", border: \"1px solid blue\"}}>\n                    修改\n                </button>)\n        \n        return (\n            <div style={{width: 1000, margin: \"0 auto\"}}>\n                <div className=\"Card\">\n                    <h1 style={{margin: \"0\", textAlign: \"center\"}}>{this.props.data.title}</h1>\n                    <div style={{display: \"flex\", justifyContent: \"flex-end\",alignItems:\"center\", fontSize: 10, color: \"#aaa\"}}>\n                        {modifyButton}\n                        <div>\n                            {this.props.data.author} 创建于 {this.props.data.createTime.Format(\"yyyy-MM-dd HH:mm:ss\")}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"Card markdown\" style={{padding: \"20px 40px\"}}\n                     dangerouslySetInnerHTML={{__html: renderedContent}}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Text;","import React from \"react\";\nimport './PageSelector.css'\n\nclass PageSelector extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cur: parseInt(this.props.cur) || 1\n        }\n    }\n\n    onClick= (index)=>{\n        if(index>0) {\n            this.setState({cur: parseInt(index)});\n            if(this.props.onClick){\n                this.props.onClick(index);\n            }\n        }else if(index===-2){\n            //prev\n            this.setState((prev,props)=>{\n                let i = prev.cur;\n                if(i+1 <= props.maxPage){\n                    if(props.onClick){\n                        props.onClick(i+1);\n                    }\n                    return {cur: i+1};\n                }\n            });\n        }else{\n            //next\n            this.setState((prev,props)=>{\n                let i = prev.cur;\n                if(i-1 >=1){\n                    if(props.onClick){\n                        props.onClick(i-1);\n                    }\n                    return {cur: i-1};\n                }\n            });\n\n        }\n    }\n\n    render() {\n        const max = parseInt(this.props.maxPage);\n        let cc = [];\n        for (let i = 1; i <= max; i++) cc.push(i);\n        let li = cc.map((i) => (\n            <li className={`${(this.state.cur === i) ? 'PageSelectorCur' : null}`} onClick={()=>{this.onClick(i)}} key={i}>\n                {i}\n            </li>\n        ));\n\n        return (\n            <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                <div className=\"PageSelector\">\n                    <ul>\n                        <li onClick={()=>{this.onClick(-1)}}>&lt;</li>\n                        {li}\n                        <li onClick={()=>{this.onClick(-2)}}>&gt;</li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default PageSelector;","import React from 'react';\nimport {PopDialog} from './PopDialog';\nimport AppNav from \"./Nav\";\nimport TextList from \"./TextList\";\nimport About from './About';\nimport Text from \"./Text\";\nimport PageSelector from './PageSelector'\nimport showdown from \"showdown\";\nimport showdownHighlight from \"showdown-highlight\";\n\n// 每页的文章数量\nconst itemsPerPage = 10;\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: null, // 用户名，同时判断登录状态\n            showLoginDialog: false,  // 是否显示登录框\n            pageIndex: 1, // 当前列表页\n            maxPageIndex: 1, // 列表页最大页\n            currentText: null,\n            currentTextList: [],\n        }\n\n        if (window.location.pathname.match(\"^/list/\\\\d+\")) {\n            this.state.pageIndex = parseInt(window.location.pathname.slice(6));\n        }\n\n        this.checkLoginStatus();\n        this.checkMaxPageIndex();\n    }\n\n    // 检测最大页数\n    checkMaxPageIndex = ()=>{\n        fetch('/api/articleCount').then(response => response.json()).then(value => {\n            let t = parseInt(value);\n            if (t > 0) {\n                this.setState({maxPageIndex: Math.ceil(t / itemsPerPage)})\n            }\n        });\n    }\n\n    // 检测登录状态\n    checkLoginStatus =()=>{\n        fetch('/user/login', {credentials: \"include\"}).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                this.setState({userName: null});\n            }\n        }).then(json => {\n            if (json) {\n                this.setState({userName: json.username});\n            }\n        }).catch(e => {\n            console.error(\"fail to parse json from /user/login\");\n        });\n    }\n\n    switchPage(path, isChangeUrl , isUpdate) {\n        console.log(\"onSwitchPage \" + path);\n        if (isChangeUrl) {\n            window.history.pushState(null, '', path);\n        }\n        if(isUpdate){\n            this.forceUpdate();\n        }\n    }\n\n    componentDidMount() {\n        window.onpopstate = () => {\n            this.forceUpdate();\n        }\n    }\n\n    componentWillUnmount() {\n        window.onpopstate = null;\n    }\n\n    onRequireLogin = () => {\n        this.setState({showLoginDialog: true});\n    }\n\n    onRequireLogoff = () => {\n        fetch(\"/user/logout\", {method: \"post\", credentials: \"same-origin\"}).then(res => {\n            this.setState({userName: null});\n        }).catch(e => {\n            console.error(\"fail to post /user/logout!\");\n        });\n    }\n\n    onLogin = (msg) => {\n        fetch('/user/login', {\n            method: \"post\",\n            credentials: 'same-origin',\n            headers: {'Content-Type': \"application/json; charset=UTF-8\"},\n            body: JSON.stringify(msg)\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    this.setState({userName: msg.username, showLoginDialog: false});\n                } else {\n                    this.setState({userName: null});\n                    alert(\"登录失败！\");\n                }\n            }).catch(e => {\n            console.error(\"fail to access /user/login!\");\n        });\n    }\n\n    onLoginClose = () => {\n        this.setState({showLoginDialog: false});\n    }\n\n    loadTextList = (index, callback) => {\n        fetch(`/api/articles?pageIndex=${index}&pageSize=${itemsPerPage}`).then(r => r.json()).then(json => {\n            let r2 = json.map(a => {\n                return {\n                    id: a.id,\n                    title: a.title,\n                    author: a.author,\n                    brief: a.brief,\n                    date: new Date(a.createTime),\n                    tags: a.tags\n                }\n            });\n            if(callback) callback();\n            this.setState({\n                currentTextList: r2,\n                pageIndex: index,\n            });\n        }).catch((e) => {\n            console.error(\"fail to parse json from /articles\");\n        })\n    }\n\n    onClickPageSelector = (index) => {\n        this.loadTextList(index, () => {\n            this.switchPage(\"/list/\"+index, true,false);\n        });\n    }\n\n    loadText = (id, callback) => {\n        fetch(`/api/article/${id}`)\n            .then(response => response.json())\n            .then(json => {\n                if(callback) callback();\n                json.createTime = new Date(json.createTime);\n                this.setState({currentText: json});\n            }).catch(e => {\n            console.log(e);\n        });\n    }\n\n    onClickTextListItem = (id) => {\n        this.loadText(id, () => {\n            this.switchPage(\"/text/\" + id, true,false);\n        });\n    }\n\n\n\n\n\n    render() {\n        console.log(\"<App> render!\");\n        const route = [\n            [\"^/$\", () => {\n                console.log(\"route: index!\");\n                if(this.state.currentTextList.length === 0 || this.state.pageIndex !== 1) {\n                    this.loadTextList(1);\n                }\n                return (\n                    <div>\n                        <TextList  data={this.state.currentTextList}\n                                   onClick={this.onClickTextListItem}/>\n                        <PageSelector maxPage={this.state.maxPageIndex} onClick={this.onClickPageSelector}/>\n                    </div>\n                );\n            }],\n            [\"^/about$\", () => (<About/>)],\n            [\"^/text/\\\\d+$\", (pathname) => {\n                console.log(\"route: text/id\");\n                let id = parseInt(pathname.slice(6));\n                if(!this.state.currentText) {\n                    console.log(\"current Text不存在， 尝试载入。。。\")\n                    this.loadText(id);\n                }\n                return <Text data={this.state.currentText} login={this.state.userName !== null}\n                             onModify={this.onTextWantModify}/>\n            }],\n            [\"^/login$\", () => {\n                setTimeout(() => {\n                    this.setState({showLoginDialog: true});\n                    window.history.pushState(null, '', '/');\n                    window.onpopstate();\n                }, 100);\n                return null;\n            }],\n            [\"^/list/\\\\d+$\", (pathname) => {\n                console.log(\"route: list/index\");\n                let index = parseInt(pathname.slice(6)) || 1;\n                if(this.state.currentTextList.length === 0 || this.state.pageIndex !== index) {\n                    console.log(`监测到path(${index})和当前页数不一致（${this.state.pageIndex}） 载入列表`)\n                    this.loadTextList(index);\n                }\n                return (\n                    <div>\n                        <TextList data={this.state.currentTextList} onClick={this.onClickTextListItem}/>\n                        <PageSelector maxPage={this.state.maxPageIndex} onClick={this.onClickPageSelector}\n                                      cur={this.state.pageIndex}/>\n                    </div>\n                );\n            }]\n        ];\n\n        let currentShow = null;\n\n        let r = route.find((arr) => {\n            if (window.location.pathname.match(arr[0])) {\n                let ele = arr[1](window.location.pathname);\n                currentShow = ele;\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        if (!r) {\n            console.log(\"fall back to index\");\n            currentShow= route[0][1](window.location.pathname);\n        }\n\n        return (\n            <div>\n                <AppNav userName={this.state.userName} onRequireLogin={this.onRequireLogin}\n                        onRequireLogoff={this.onRequireLogoff}/>\n                {currentShow}\n                {\n                    (this.state.showLoginDialog) && <PopDialog onSubmit={this.onLogin} onClose={this.onLoginClose}/>\n                }\n                <div style={{height: 40}}> </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nDate.prototype.Format = function (fmt) { //author: meizz\n    var o = {\n        \"M+\": this.getMonth() + 1, //月份\n        \"d+\": this.getDate(), //日\n        \"H+\": this.getHours(), //小时\n        \"m+\": this.getMinutes(), //分\n        \"s+\": this.getSeconds(), //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        \"S\": this.getMilliseconds() //毫秒\n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}